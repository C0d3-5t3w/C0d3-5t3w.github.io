name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          npm init -y
          npm install -g sass
          npm install --save-dev terser eslint typescript
          
      - name: Create eslint config
        run: |
          echo '{
            "env": {
              "browser": true,
              "es2021": true
            },
            "extends": "eslint:recommended",
            "parserOptions": {
              "ecmaVersion": 2021,
              "sourceType": "module"
            }
          }' > .eslintrc.json
          
      - name: Create tsconfig.json
        run: |
          echo '{
            "compilerOptions": {
              "target": "ES6",
              "module": "None",
              "outDir": "./assets/js",
              "rootDir": "./assets/ts",
              "strict": true,
              "esModuleInterop": true,
              "skipLibCheck": true,
              "forceConsistentCasingInFileNames": true
            },
            "include": ["./assets/ts/**/*"]
          }' > tsconfig.json
      
      - name: Compile TypeScript
        run: |
          mkdir -p assets/js
          npx tsc
          
      - name: Lint JavaScript
        run: |
          npx eslint assets/js/*.js --fix || true
          
      - name: Minify JavaScript
        run: |
          for file in assets/js/*.js; do
            if [ -f "$file" ]; then
              npx terser "$file" \
                --compress \
                --mangle \
                --source-map "content='inline',url='$(basename "$file").map'" \
                --output "${file%.js}.min.js"
              mv "${file%.js}.min.js" "$file"
            fi
          done
          
      - name: Process PHP files
        run: |
          find . -name "*.php" -type f -exec sh -c '
            php "$1" > "${1%.php}.html"
            rm "$1"
          ' sh {} \;
          
      - name: Compile Sass
        run: |
          mkdir -p assets/css
          sass assets/sass/main.scss:assets/css/main.css
          sass assets/sass/alt.scss:assets/css/alt.css
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4